// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace C_Sharp_API_Example.Migrations
{
    [DbContext(typeof(PokemonBattleDbContext))]
    partial class PokemonBattleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.PokemonBattle.PokemonBattle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Pokemon1Id")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Pokemon2Id")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("PokemonWinnerId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Pokemon1Id");

                    b.HasIndex("Pokemon2Id");

                    b.HasIndex("PokemonWinnerId");

                    b.ToTable("PokemonBattles");
                });

            modelBuilder.Entity("Domain.Pokemons.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<int>("HP")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.Property<int>("Type1")
                        .HasColumnType("int");

                    b.Property<int?>("Type2")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pokemons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Attack = 255,
                            Defense = 255,
                            HP = 255,
                            Name = "Charizad",
                            Speed = 255,
                            Type1 = 2,
                            Type2 = 5
                        });
                });

            modelBuilder.Entity("Domain.PokemonBattle.PokemonBattle", b =>
                {
                    b.HasOne("Domain.Pokemons.Pokemon", "Pokemon1")
                        .WithMany()
                        .HasForeignKey("Pokemon1Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Pokemons.Pokemon", "Pokemon2")
                        .WithMany()
                        .HasForeignKey("Pokemon2Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Pokemons.Pokemon", "WinnerPokemon")
                        .WithMany()
                        .HasForeignKey("PokemonWinnerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pokemon1");

                    b.Navigation("Pokemon2");

                    b.Navigation("WinnerPokemon");
                });
#pragma warning restore 612, 618
        }
    }
}
